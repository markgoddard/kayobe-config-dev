---
# Kayobe network configuration.

###############################################################################
# Network role to network mappings.

# Map all networks to the all-in-one network.

# Name of the network used for admin access to the overcloud
#admin_oc_net_name:

# Name of the network used by the seed to manage the bare metal overcloud
# hosts via their out-of-band management controllers.
#oob_oc_net_name:
oob_oc_net_name:

# Name of the network used by the seed to provision the bare metal overcloud
# hosts.
#provision_oc_net_name:
provision_oc_net_name: provision_oc

# Name of the network used by the overcloud hosts to manage the bare metal
# compute hosts via their out-of-band management controllers.
#oob_wl_net_name:
oob_wl_net_name:

# Name of the network used by the overcloud hosts to provision the bare metal
# workload hosts.
#provision_wl_net_name:
provision_wl_net_name:

# Name of the network used to expose the internal OpenStack API endpoints.
#internal_net_name:

# List of names of networks used to provide external network access via
# Neutron.
# Deprecated name: external_net_name
# If external_net_name is defined, external_net_names will default to a list
# containing one item, external_net_name.
#external_net_names:
external_net_names:
  - provision_oc

# Name of the network used to expose the public OpenStack API endpoints.
#public_net_name:
public_net_name: public

# Name of the network used by Neutron to carry tenant overlay network traffic.
#tunnel_net_name:

# Name of the network used to carry storage data traffic.
#storage_net_name:

# Name of the network used to carry storage management traffic.
#storage_mgmt_net_name:

# Name of the network used to perform hardware introspection on the bare metal
# workload hosts.
#inspection_net_name:
inspection_net_name:

# Name of the network used to perform cleaning on the bare metal workload
# hosts
#cleaning_net_name:
cleaning_net_name:

###############################################################################
# Network definitions.

provision_oc_cidr: 192.168.122.0/24
provision_oc_mtu: 1450
# Native VLAN
provision_oc_physical_network: physnet1
provision_oc_gateway: 192.168.122.1

internal1_cidr: 192.168.37.0/24
internal1_mtu: 1450
internal1_allocation_pool_start: 192.168.37.3
internal1_allocation_pool_end: 192.168.37.254
internal1_vlan: 101
internal1_physical_network: physnet1
internal1_routes:
  - cidr: "{{ internal2_cidr }}"
    gateway: 192.168.37.1

internal2_cidr: 192.168.43.0/24
internal2_mtu: 1450
internal2_allocation_pool_start: 192.168.43.3
internal2_allocation_pool_end: 192.168.43.254
internal2_allocation_pool_start: 192.168.43.3
internal2_allocation_pool_end: 192.168.43.254
internal2_vlan: 107
internal2_physical_network: physnet1
internal2_routes:
  - cidr: "{{ internal1_cidr }}"
    gateway: 192.168.43.1

#external_cidr: 192.168.38.0/24
external_mtu: 1450
external_vlan: 102
external_physical_network: physnet1

public_cidr: 192.168.39.0/24
public_mtu: 1450
public_allocation_pool_start: 192.168.39.3
public_allocation_pool_end: 192.168.39.254
public_vlan: 103
public_physical_network: physnet1

tunnel1_cidr: 192.168.40.0/24
tunnel1_mtu: 1450
tunnel1_allocation_pool_start: 192.168.40.3
tunnel1_allocation_pool_end: 192.168.40.254
tunnel1_vlan: 104
tunnel1_physical_network: physnet1
tunnel1_routes:
  - cidr: "{{ tunnel2_cidr }}"
    gateway: 192.168.40.1

tunnel2_cidr: 192.168.44.0/24
tunnel2_mtu: 1450
tunnel2_allocation_pool_start: 192.168.44.3
tunnel2_allocation_pool_end: 192.168.44.254
tunnel2_vlan: 108
tunnel2_physical_network: physnet1
tunnel2_routes:
  - cidr: "{{ tunnel1_cidr }}"
    gateway: 192.168.44.1

storage1_cidr: 192.168.41.0/24
storage1_mtu: 1450
storage1_allocation_pool_start: 192.168.41.3
storage1_allocation_pool_end: 192.168.41.254
storage1_vlan: 105
storage1_physical_network: physnet1
storage1_routes:
  - cidr: "{{ storage2_cidr }}"
    gateway: 192.168.41.1

storage2_cidr: 192.168.45.0/24
storage2_mtu: 1450
storage2_allocation_pool_start: 192.168.45.3
storage2_allocation_pool_end: 192.168.45.254
storage2_vlan: 109
storage2_physical_network: physnet1
storage2_routes:
  - cidr: "{{ storage1_cidr }}"
    gateway: 192.168.45.1

storage_mgmt1_cidr: 192.168.42.0/24
storage_mgmt1_mtu: 1450
storage_mgmt1_allocation_pool_start: 192.168.42.3
storage_mgmt1_allocation_pool_end: 192.168.42.254
storage_mgmt1_vlan: 106
storage_mgmt1_physical_network: physnet1
storage_mgmt1_routes:
  - cidr: "{{ storage_mgmt2_cidr }}"
    gateway: 192.168.42.1

storage_mgmt2_cidr: 192.168.46.0/24
storage_mgmt2_mtu: 1450
storage_mgmt2_allocation_pool_start: 192.168.46.3
storage_mgmt2_allocation_pool_end: 192.168.46.254
storage_mgmt2_vlan: 110
storage_mgmt2_physical_network: physnet1
storage_mgmt2_routes:
  - cidr: "{{ storage_mgmt1_cidr }}"
    gateway: 192.168.46.1

###############################################################################
# Network virtual patch link configuration.

# Suffix for Open vSwitch bridge names.
#network_bridge_suffix_ovs:

# Prefix for virtual patch interface names.
#network_patch_prefix:

# Suffix for virtual patch link interface names when connected towards the
# physical interface.
#network_patch_suffix_phy:

# Suffix for virtual patch link interface names when connected towards the
# OVS bridge.
#network_patch_suffix_ovs:

###############################################################################
# Network routing table configuration.

# List of IP routing tables. Each item should be a dict containing 'id' and
# 'name' items. These tables will be added to /etc/iproute2/rt_tables.
#network_route_tables:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
